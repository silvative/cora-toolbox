{"name":"Get System Actor Long ID (CSV)","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/tools/scribal/ink-quill-red.webp","scope":"global","command":"function copyToClipboard(text) {\n    const input = document.createElement('textarea');\n    input.value = text;\n    \n    document.body.appendChild(input);\n    input.select();\n    document.execCommand('copy');\n    document.body.removeChild(input);\n}\n\n    const data = game.packs.contents.flatMap(x =>\n        Array.from(x.index.values())\n            .filter(k => k.type == 'npc' || k.type == 'hazard')\n            .map(k => `Compendium.${x.metadata.package}.${x.metadata.name}.${k._id}`));\n\n    const output = data.join('\\n');\n    copyToClipboard(output);","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.ST8hFgd4GMepYNAY"}},"_id":"4dWGy286PMyTD0Li"}
{"_id":"F4l8PDKxDeokuBUc","name":"Log controlled placeables IDs","type":"script","author":"z5rWrDuAmDmpIgoq","img":"icons/svg/mystery-man.svg","scope":"global","command":"for ( let controlled of canvas.activeLayer.controlled)\n{console.log(controlled.data._id, controlled.data.name);}","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3,"z5rWrDuAmDmpIgoq":3},"flags":{"exportSource":{"world":"pf2e-beginner-box","system":"pf2e","coreVersion":"9.268","systemVersion":"3.8.4.11118"},"pf2e-abomination-vaults":{"isAV":true},"core":{"sourceId":"Macro.IG9T1NXWfBf7YfcX"}}}
{"name":"Scripted Sequence Template","type":"script","author":"z5rWrDuAmDmpIgoq","img":"icons/vtt-512.png","scope":"global","command":"// If I want to script a delay, add this part to the start\n\nfunction sleep(milliseconds) {\n    return new Promise(resolve => {\n        setTimeout(() => { resolve('') }, milliseconds);\n    })\n}\n\n// And this part to the middle\n\nawait sleep(800);\n\n// Declaring IDs to toggle, delete line to skip\n\nconst playlist = game.playlists.getName(\"FX\");\nconst sound = playlist.sounds.getName(\"Splintering Wood\");\nconst tile = canvas.scene.tiles.get(\"tileId\");\nconst light = canvas.scene.lights.get(\"lightId\");\nconst door = canvas.scene.walls.get(\"wallId\");\nconst token = canvas.scene.tokens.get(\"tokenId\");\nconst ambientsound = canvas.scene.sounds.get(\"lightID\");\n\n    // Plays the sound\n\n    if (sound) await playlist.playSound(sound);\n\n    // Toggles placeables visibility status\n\n    if (tile) await tile.update({hidden: !tile.data.hidden});\n    if (token) await token.update({hidden: !token.data.hidden});\n    if (light) await light.update({hidden: !light.data.hidden});\n    if (ambientsound) await ambientsound.update({hidden: !ambientsound.data.hidden});\n\n\n    // Checks if the door is open, if yes closes it, if no opens it\n \n    if (door.data.ds === 1) {\n        if (door) await door.update({ds: 0});}\n    else { \n        if (door) await door.update({ds: 1});}","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3,"z5rWrDuAmDmpIgoq":3},"flags":{"exportSource":{"world":"pf2e-beginner-box","system":"pf2e","coreVersion":"9.268","systemVersion":"3.8.4.11118"},"pf2e-abomination-vaults":{"isAV":true},"core":{"sourceId":"Macro.IG9T1NXWfBf7YfcX"}},"_id":"JJdO1kRolb93Lexc"}
{"_id":"JQcD8XtO6h6pqq9X","name":"Log Sound IDs","type":"script","author":"z5rWrDuAmDmpIgoq","img":"icons/svg/sound.svg","scope":"global","command":"for (let sound of canvas.scene.sounds)\n{ChatMessage.create({content:sound.data._id});}","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3,"z5rWrDuAmDmpIgoq":3},"flags":{"exportSource":{"world":"pf2e-beginner-box","system":"pf2e","coreVersion":"9.268","systemVersion":"3.8.4.11118"},"pf2e-abomination-vaults":{"isAV":true},"core":{"sourceId":"Macro.IG9T1NXWfBf7YfcX"}}}
{"name":"Set Prototype Token Images","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/tools/fasteners/chain-steel-blue.webp","scope":"global","command":"let updates = []\nfor(let a of game.actors.contents) {\nlet _id = a.data._id\nlet tokenimg = a.data.token.img\ntokenimg = tokenimg.replace(\"/bestiary-portraits/\", \"/bestiary-tokens/\")\nlet update = {\n_id: _id, token: {img: tokenimg}\n}\nupdates.push(update)\n}\nawait Actor.updateDocuments(updates)","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.ugB9DlPg1pev1iS9"}},"_id":"LRI01f8GhCBBWHHm"}
{"name":"Import Multiple Actors","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/tools/hand/scale-balances-merchant-brown.webp","scope":"global","command":"const PACK_NAME = \"pf2e.abomination-vaults-bestiary\"; // configure this\nconst MONSTER_NAMES = [\"Bone Gladiator\", \"Mister Beak\", \"Blood of Belcorra\"]; // configure this\nconst pack = game.packs.get(PACK_NAME);\nfor ( const name of MONSTER_NAMES ) {\n  const id = pack.index.find(i => i.name === name)._id;\n  await game.actors.importFromCompendium(pack, id, {}, {keepId: true});\n}","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.RegBGW211JleQN2e"}},"_id":"MfYTQhjABgIQuBtO"}
{"name":"Compendium (Equipment)","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/containers/bags/sack-cloth-patched-gray.webp","scope":"global","command":"game.packs.get(\"pf2e.equipment-srd\").render(true)","folder":null,"sort":0,"permission":{"default":0,"RwQQFAbeZEXH9J8B":3,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.95tOahEZk5PSGuSs"}},"_id":"MlhrrkrIoSlWk4pH"}
{"name":"Compendium (Spells)","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/magic/control/debuff-energy-hold-levitate-blue-yellow.webp","scope":"global","command":"game.packs.get(\"pf2e.spells-srd\").render(true)","folder":null,"sort":0,"permission":{"default":0,"RwQQFAbeZEXH9J8B":3,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.95tOahEZk5PSGuSs"}},"_id":"Mlnd3o88tbtQjV9c"}
{"name":"Journals regex","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/magic/symbols/rune-sigil-hook-white-red.webp","scope":"global","command":"const regex = /exploration,/\nconst updates = game.journal\n  .filter((journal) => journal.data.content?.match(regex) !== null)\n  .map((journal) => {\n    const content = journal.data.content.replace(regex, \"exploration\");\n    return { _id: journal.id, content };\n  });\nconsole.log(\"updates\", updates);\nawait JournalEntry.updateDocuments(updates);","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.5anllkK6gy2wjQJs"}},"_id":"PxLaVz3YeFfKzFCM"}
{"name":"Configure Tokens","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/environment/people/group.webp","scope":"global","command":"// Sets prototype tokens to show name and HP on hover\nconst actorUpdate = game.actors.map(e => ({\n    _id: e.id,\n    \"token.displayBars\": CONST.TOKEN_DISPLAY_MODES.HOVER,\n    \"token.displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\n    \"token.bar1\": {attribute: \"attributes.hp\"},\n    \"token.bar2\": {attribute: null}\n}));\nawait Actor.updateDocuments(actorUpdate);\nui.notifications.info(\"PROTOTYPE TOKENS UPDATED\");\n// Sets scene tokens to show name and HP on hover\nlet scene = game.scenes.active;\nlet tokenUpdates = scene.data.tokens.map(e => ({\n    _id: e.id,\n    displayBars: CONST.TOKEN_DISPLAY_MODES.HOVER,\n    displayName: CONST.TOKEN_DISPLAY_MODES.HOVER,\n    bar1: {attribute: \"attributes.hp\"},\n    bar2: {attribute: null}\n}));\nawait scene.updateEmbeddedDocuments(\"Token\", tokenUpdates);\nui.notifications.info(`TOKENS UPDATED on scene: ${scene.name}`);","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"exportSource":{"world":"sot","system":"pf2e","coreVersion":"9.269","systemVersion":"3.8.4.11118"},"core":{"sourceId":"Macro.4JXc5IdLq5rUq5GM"}},"_id":"SywkBotI98SUJePd"}
{"name":"Compendium (Conditions)","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/skills/toxins/symbol-poison-drop-skull-green.webp","scope":"global","command":"game.packs.get(\"pf2e.conditionitems\").render(true)","folder":null,"sort":0,"permission":{"default":0,"RwQQFAbeZEXH9J8B":3,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.95tOahEZk5PSGuSs"}},"_id":"TOgZjs4eZqX6vzB7"}
{"name":"Set Token to Neutral","type":"script","author":"gnyTpTckqpage05l","img":"icons/magic/control/silhouette-hold-change-blue.webp","scope":"global","command":"token.document.update({disposition: CONST.TOKEN_DISPOSITIONS.NEUTRAL}) // other options are .FRIENDLY and .HOSTILE instead of .NEUTRAL","folder":null,"sort":0,"permission":{"default":0,"gnyTpTckqpage05l":3},"flags":{"exportSource":{"world":"sot","system":"pf2e","coreVersion":"9.269","systemVersion":"3.8.4.11118"},"core":{"sourceId":"Macro.4JXc5IdLq5rUq5GM"}},"_id":"UFZgeSHbJx73kP7F"}
{"name":"Compendium (Actions)","type":"script","author":"xOsB85wXI0jTccyw","img":"systems/pf2e/icons/actions/OneAction.webp","scope":"global","command":"game.packs.get(\"pf2e.actionspf2e\").render(true)","folder":null,"sort":0,"permission":{"default":0,"RwQQFAbeZEXH9J8B":3,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.95tOahEZk5PSGuSs"}},"_id":"YtKaJYa8AYHau6AN"}
{"name":"Get System Actor Names (CSV)","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/tools/scribal/ink-quill-red.webp","scope":"global","command":"function copyToClipboard(text) {\n    const input = document.createElement('textarea');\n    input.value = text;\n    \n    document.body.appendChild(input);\n    input.select();\n    document.execCommand('copy');\n    document.body.removeChild(input);\n}\n\n    const data = game.packs.contents.flatMap(x =>\n        Array.from(x.index.values())\n            .filter(k => k.type == 'npc' || k.type == 'hazard')\n            .map(k => `${k.name}`));\n\n    const output = data.join('\\n');\n    copyToClipboard(output);","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.ST8hFgd4GMepYNAY"}},"_id":"eFQCCd9lER4kBftV"}
{"name":"Pin Conformity","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/tools/navigation/sextant-steel-blue.webp","scope":"global","command":"canvas.notes.updateAll({iconSize: 32, fontSize: 24});","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.P5hPlWioWY898QcX"}},"_id":"eUmrVM5KtpqcKO6b"}
{"name":"Show Art","type":"script","author":"gnyTpTckqpage05l","img":"icons/tools/scribal/magnifying-glass.webp","scope":"global","command":"if (!token) {\n    ui.notifications.error(\"No token selected!\");\n} else {\n    const popout = new ImagePopout(token.actor.data.img, {\n        title: token.name,\n        shareable: true,\n        uuid: token.actor.uuid\n    })\n    popout.render(true);\n    popout.shareImage();\n}","folder":null,"sort":0,"permission":{"default":0,"gnyTpTckqpage05l":3},"flags":{"exportSource":{"world":"sot","system":"pf2e","coreVersion":"9.269","systemVersion":"3.8.4.11118"},"core":{"sourceId":"Macro.4JXc5IdLq5rUq5GM"}},"_id":"ekrrTvOaHrWSA0iF"}
{"name":"Extract All Actor UUIDs to CSV","type":"script","author":"gnyTpTckqpage05l","img":"icons/tools/scribal/ink-quill-red.webp","scope":"global","command":"function copyToClipboard(text) {\n    const input = document.createElement('textarea');\n    input.value = text;\n    \n    document.body.appendChild(input);\n    input.select();\n    document.execCommand('copy');\n    document.body.removeChild(input);\n}\n\n    const data = game.packs.contents.flatMap(x =>\n        Array.from(x.index.values())\n            .filter(k => k.type == 'npc' || k.type == 'hazard')\n            .map(k => `Compendium.${x.metadata.package}.${x.metadata.name}.${k._id},${k.name}`));\n\n    const output = data.join('\\n');\n    copyToClipboard(output);","folder":null,"sort":0,"permission":{"default":0,"gnyTpTckqpage05l":3},"flags":{"core":{"sourceId":"Macro.ST8hFgd4GMepYNAY"}},"_id":"fN5hUmvZPFoNxfEl"}
{"name":"Get System Actor Source (CSV)","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/tools/scribal/ink-quill-red.webp","scope":"global","command":"function copyToClipboard(text) {\n    const input = document.createElement('textarea');\n    input.value = text;\n    \n    document.body.appendChild(input);\n    input.select();\n    document.execCommand('copy');\n    document.body.removeChild(input);\n}\n\n    const data = game.packs.contents.flatMap(x =>\n        Array.from(x.index.values())\n            .filter(k => k.type == 'npc' || k.type == 'hazard')\n            .map(k => `${x.metadata.package}.${x.metadata.name}`));\n\n    const output = data.join('\\n');\n    copyToClipboard(output);","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.ST8hFgd4GMepYNAY"}},"_id":"maPBvynilcG66Lqd"}
{"_id":"nw7WKyCG6pS3VhP8","name":"Log Light IDs","type":"script","author":"z5rWrDuAmDmpIgoq","img":"icons/svg/light.svg","scope":"global","command":"for (let light of canvas.scene.lights)\n{ChatMessage.create({content:light.data._id});}","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3,"z5rWrDuAmDmpIgoq":3},"flags":{"exportSource":{"world":"pf2e-beginner-box","system":"pf2e","coreVersion":"9.268","systemVersion":"3.8.4.11118"},"pf2e-abomination-vaults":{"isAV":true},"core":{"sourceId":"Macro.IG9T1NXWfBf7YfcX"}}}
{"name":"Get System Actor Short ID (CSV)","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/tools/scribal/ink-quill-red.webp","scope":"global","command":"function copyToClipboard(text) {\n    const input = document.createElement('textarea');\n    input.value = text;\n    \n    document.body.appendChild(input);\n    input.select();\n    document.execCommand('copy');\n    document.body.removeChild(input);\n}\n\n    const data = game.packs.contents.flatMap(x =>\n        Array.from(x.index.values())\n            .filter(k => k.type == 'npc' || k.type == 'hazard')\n            .map(k => `${k._id}`));\n\n    const output = data.join('\\n');\n    copyToClipboard(output);","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.ST8hFgd4GMepYNAY"}},"_id":"ujXeUnPMMibKVPK1"}
{"name":"Import Single Actor","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/tools/hand/scale-balances-merchant-brown.webp","scope":"global","command":"pack = game.packs.get(\"pf2e.npc-gallery\");\ngame.actors.importFromCompendium(pack, \"p94aKz7KsiAQJscm\", {}, {keepId: true});","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.Py9U2eAUENc6RwUk"}},"_id":"uoZVhjG6Fexrx4Ur"}
{"_id":"utgg62mR4sIcPwP8","name":"Quick Reference: DCs","type":"script","author":"gnyTpTckqpage05l","img":"icons/sundries/documents/document-symbol-lightning-brown.webp","scope":"global","command":"let journal = game.journal.getName(\"Difficulty Tables\");\nconst sheet = journal.sheet;\nif ( sheet.rendered ) {sheet.close();}\nelse {sheet.render(true)}","folder":null,"sort":0,"permission":{"default":0,"ZJ6r3OyrumO4W34r":3,"gnyTpTckqpage05l":3},"flags":{"core":{"sourceId":"Macro.MppBkkOiWyW1z6fW"},"pf2e-beginner-box":{"isBB":true}}}
{"_id":"wBj177Zhpc0x1Xsr","name":"Quick Reference: Encounters","type":"script","author":"gnyTpTckqpage05l","img":"icons/sundries/documents/document-symbol-skull-tan.webp","scope":"global","command":"let journal = game.journal.getName(\"Encounter Budget\");\nconst sheet = journal.sheet;\nif ( sheet.rendered ) {sheet.close();}\nelse {sheet.render(true)}","folder":null,"sort":0,"permission":{"default":0,"ZJ6r3OyrumO4W34r":3,"gnyTpTckqpage05l":3},"flags":{"pf2e-beginner-box":{"isBB":true},"core":{"sourceId":"Macro.MppBkkOiWyW1z6fW"}}}
{"name":"Copy scene data","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/tools/navigation/map-chart-tan.webp","scope":"global","command":"// A dictionary of Scene ID's, mapping the 150px version (left) to the 100px verison (right)\nconst scenes = {\n  \"Z5ExlCWEpqm0SMe1\" : \"6JuLFPWO21xzKgbc\",\n};\n\nui.notifications.info(\"Copying data\")\n\nfor ( const scenePair of Object.entries(scenes) ) {\n  let originalScene = game.scenes.get(scenePair[0]);\n  if ( !originalScene) {\n    ui.notifications.warn(`Could not find Scene ${scenePair[0]}`);\n  }\n\n  let convertedScene = game.scenes.get(scenePair[1]);\n  if ( !convertedScene ) {\n    ui.notifications.warn(`Could not find Scene ${scenePair[1]}`);\n  }\n\n  const xConversionRate = convertedScene.data.width / originalScene.data.width;\n  const yConversionRate = convertedScene.data.height / originalScene.data.height;\n  for ( const collection of ['notes', 'tokens', 'sounds', 'lights'] ) {\n    const embedded = originalScene[collection].map(o => {\n      let mapped = o.toObject();\n      mapped.x = Math.round(mapped.x * xConversionRate);\n      mapped.y = Math.round(mapped.y * yConversionRate);\n      return mapped;\n    });\n    const embeddedName = originalScene[collection].documentClass.documentName;\n    await convertedScene.createEmbeddedDocuments(embeddedName, embedded);\n  }\n}\n\nui.notifications.info(\"Done\");","folder":null,"sort":0,"permission":{"default":0,"xOsB85wXI0jTccyw":3},"flags":{"core":{"sourceId":"Macro.fEbsBvGDTSCA0582"}},"_id":"z16adZdnt3KJbI3Z"}
{"name":"Transfer Scene Data","type":"script","author":"xOsB85wXI0jTccyw","img":"icons/tools/navigation/map-chart-tan.webp","scope":"global","command":"// A dictionary of Scene ID's, mapping the 150px version (left) to the 100px verison (right)\nconst scenes = {\n  \"Z5ExlCWEpqm0SMe1\" : \"6JuLFPWO21xzKgbc\",\n};\n\nui.notifications.info(\"Copying data\")\n\nfor ( const scenePair of Object.entries(scenes) ) {\n  let originalScene = game.scenes.get(scenePair[0]);\n  if ( !originalScene) {\n    ui.notifications.warn(`Could not find Scene ${scenePair[0]}`);\n  }\n\n  let convertedScene = game.scenes.get(scenePair[1]);\n  if ( !convertedScene ) {\n    ui.notifications.warn(`Could not find Scene ${scenePair[1]}`);\n  }\n\n  const xConversionRate = convertedScene.data.width / originalScene.data.width;\n  const yConversionRate = convertedScene.data.height / originalScene.data.height;\n  for ( const collection of ['notes', 'tokens', 'sounds', 'lights'] ) {\n    const embedded = originalScene[collection].map(o => {\n      let mapped = o.toObject();\n      mapped.x = Math.round(mapped.x * xConversionRate);\n      mapped.y = Math.round(mapped.y * yConversionRate);\n      return mapped;\n    });\n    const embeddedName = originalScene[collection].documentClass.documentName;\n    await convertedScene.createEmbeddedDocuments(embeddedName, embedded);\n  }\n}\n\nui.notifications.info(\"Done\");","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.fEbsBvGDTSCA0582"}},"_id":"z16adZdnt3KJbI3Z","ownership":{"default":0,"xOsB85wXI0jTccyw":3},"_stats":{"systemId":"pf2e","systemVersion":"3.13.5","coreVersion":"10.279","createdTime":null,"modifiedTime":1661864866057,"lastModifiedBy":"ZJ6r3OyrumO4W34r"}}
{"$$deleted":true,"_id":"4dWGy286PMyTD0Li"}
{"$$deleted":true,"_id":"eFQCCd9lER4kBftV"}
{"$$deleted":true,"_id":"ujXeUnPMMibKVPK1"}
{"$$deleted":true,"_id":"maPBvynilcG66Lqd"}
{"name":"Purge Suffixes","type":"script","scope":"global","author":"ZJ6r3OyrumO4W34r","img":"icons/sundries/books/book-open-purple.webp","command":"const journal = game.journal.get(\"mbia2YRWQeDkcOou\");\n\nlet toUpdate = [];\nfor ( const page of journal.pages ) {\n  let data = foundry.utils.duplicate(page);\n  data.name = data.name.replace(new RegExp(\"(text)\", 'gi'), \"\");\n  data.name = data.name.replace(new RegExp(\"(image)\", 'gi'), \"\");\n  data.name = data.name.trim();\n  toUpdate.push(data);\n}\njournal.updateEmbeddedDocuments(\"JournalEntryPage\", toUpdate);","ownership":{"default":0,"ZJ6r3OyrumO4W34r":3},"flags":{"core":{"sourceId":"Macro.GZs2G1b9a7MyIlHi"}},"_stats":{"systemId":"pf2e","systemVersion":"3.13.5","coreVersion":"10.279","createdTime":1661864931916,"modifiedTime":1661864931916,"lastModifiedBy":"ZJ6r3OyrumO4W34r"},"folder":null,"sort":0,"_id":"HE4POVfac9YuBaQW"}
{"name":"Force BB Flag","type":"script","scope":"global","author":"ZJ6r3OyrumO4W34r","img":"icons/sundries/books/book-open-purple.webp","command":"for (let j of game.journal) {\n   if (!j.getFlag(\"pf2e-beginner-box\", \"isBB\")) {\n       await j.setFlag(\"pf2e-beginner-box\", \"isBB\", true)\n       console.log(\"set flag for \" + j.name)\n   }\n}","ownership":{"default":0,"ZJ6r3OyrumO4W34r":3},"flags":{"core":{"sourceId":"Macro.WKiskbhNKPq8HGRr"}},"_stats":{"systemId":"pf2e","systemVersion":"3.13.5","coreVersion":"10.279","createdTime":1661864933817,"modifiedTime":1661864933817,"lastModifiedBy":"ZJ6r3OyrumO4W34r"},"folder":null,"sort":0,"_id":"t5L0doJDYkZYV4aP"}
{"name":"Folder to Journal","type":"script","scope":"global","author":"ZJ6r3OyrumO4W34r","img":"icons/sundries/books/book-open-purple.webp","command":"const folders = game.folders.contents.filter(f => f.type === \"JournalEntry\");\nconst content = `\n  <select>\n    ${folders.map(f => `<option value=\"${f.id}\">${f.name}</option>`)}\n  </select>\n`;\nconst folderId = await Dialog.prompt({\n  content,\n  title: \"Choose a folder\",\n  rejectClose: false,\n  options: {jQuery: false},\n  callback: html => html.querySelector(\"select\").value\n});\nif ( !folderId ) return;\nconst folder = game.folders.get(folderId);\nconst sort = folder.sorting === \"m\"\n  ? SidebarDirectory._sortStandard\n  : SidebarDirectory._sortAlphabetical;\nconst contents = folder.contents.sort(sort);\n// Maintain a map of journal entries to their converted pages.\nconst contentMap = new Map();\nconst pages = contents.flatMap((entry, i) => {\n  const pages = [];\n  // Preserve sort order in the folder.\n  let sort = (i + 1) * 200_000;\n  const textPage = entry.pages.find(p => p.type === \"text\")?.toObject();\n  const imagePage = entry.pages.find(p => p.type === \"image\")?.toObject();\n  if ( textPage ) {\n    textPage._id = foundry.utils.randomID();\n    textPage.title.show = true;\n    textPage.sort = sort;\n    pages.push(textPage);\n    sort -= 100_000;\n    contentMap.set(entry.id, textPage._id);\n  }\n  if ( imagePage ) {\n    imagePage.sort = sort;\n    pages.push(imagePage);\n  }\n  return pages;\n});\nconst entry = await JournalEntry.implementation.create({\n  pages,\n  name: folder.name,\n  folder: folder.folder?.id\n}, {keepEmbeddedIds: true});\n// Update internal links between pages.\nconst pageUpdates = [];\nfor ( const page of entry.pages.contents.filter(p => p.type === \"text\") ) {\n  let replacements = false;\n  const content = page.text.content.replace(/@JournalEntry\\[([^\\]]+)]/g, (match, originalId) => {\n    const targetId = contentMap.get(originalId);\n    if ( !targetId ) return match;\n    replacements = true;\n    const link = entry.pages.get(targetId)._createDocumentLink({}, {relativeTo: page});\n    return link.split(\"{\")[0];\n  });\n  if ( replacements ) pageUpdates.push({_id: page.id, \"text.content\": content});\n}\nif ( pageUpdates.length ) entry.updateEmbeddedDocuments(\"JournalEntryPage\", pageUpdates);","ownership":{"default":0,"ZJ6r3OyrumO4W34r":3},"flags":{"core":{"sourceId":"Macro.dbjuxUtIKBKONCvh"}},"_stats":{"systemId":"pf2e","systemVersion":"3.13.5","coreVersion":"10.279","createdTime":1661864935481,"modifiedTime":1661864935481,"lastModifiedBy":"ZJ6r3OyrumO4W34r"},"folder":null,"sort":0,"_id":"rAkQkZSLbpQGEhIN"}
{"name":"V9 Folder to V10 Journal","type":"script","scope":"global","author":"ZJ6r3OyrumO4W34r","img":"icons/sundries/books/book-open-purple.webp","command":"const folders = game.folders.contents.filter(f => f.type === \"JournalEntry\");\nconst content = `\n  <select>\n    ${folders.map(f => `<option value=\"${f.id}\">${f.name}</option>`)}\n  </select>\n`;\nconst folderId = await Dialog.prompt({\n  content,\n  title: \"Choose a folder\",\n  rejectClose: false,\n  options: {jQuery: false},\n  callback: html => html.querySelector(\"select\").value\n});\nif ( !folderId ) return;\nconst folder = game.folders.get(folderId);\nconst sort = folder.sorting === \"m\"\n  ? SidebarDirectory._sortStandard\n  : SidebarDirectory._sortAlphabetical;\nconst contents = folder.contents.sort(sort);\n// Maintain a map of journal entries to their converted pages.\nconst contentMap = new Map();\nconst pages = contents.flatMap((entry, i) => {\n  const pages = [];\n  // Preserve sort order in the folder.\n  let sort = (i + 1) * 200_000;\n  const textPage = entry.pages.find(p => p.type === \"text\")?.toObject();\n  const imagePage = entry.pages.find(p => p.type === \"image\")?.toObject();\n  if ( textPage ) {\n    textPage._id = foundry.utils.randomID();\n    textPage.title.show = true;\n    textPage.sort = sort;\n    pages.push(textPage);\n    sort -= 100_000;\n    contentMap.set(entry.id, textPage._id);\n  }\n  if ( imagePage ) {\n    imagePage.sort = sort;\n    pages.push(imagePage);\n  }\n  return pages;\n});\nconst entry = await JournalEntry.implementation.create({\n  pages,\n  name: folder.name,\n  folder: folder.folder?.id\n}, {keepEmbeddedIds: true});\n// Update internal links between pages.\nconst pageUpdates = [];\nfor ( const page of entry.pages.contents.filter(p => p.type === \"text\") ) {\n  let replacements = false;\n  const content = page.text.content.replace(/@JournalEntry\\[([^\\]]+)]/g, (match, originalId) => {\n    const targetId = contentMap.get(originalId);\n    if ( !targetId ) return match;\n    replacements = true;\n    const link = entry.pages.get(targetId)._createDocumentLink({}, {relativeTo: page});\n    return link.split(\"{\")[0];\n  });\n  if ( replacements ) pageUpdates.push({_id: page.id, \"text.content\": content});\n}\nif ( pageUpdates.length ) entry.updateEmbeddedDocuments(\"JournalEntryPage\", pageUpdates);","ownership":{"default":0,"ZJ6r3OyrumO4W34r":3},"flags":{"core":{"sourceId":"Macro.dbjuxUtIKBKONCvh"}},"_stats":{"systemId":"pf2e","systemVersion":"3.13.5","coreVersion":"10.279","createdTime":1661864935481,"modifiedTime":1661864942606,"lastModifiedBy":"ZJ6r3OyrumO4W34r"},"folder":null,"sort":0,"_id":"rAkQkZSLbpQGEhIN"}
{"name":"Broken Link Checker","type":"script","scope":"global","author":"ZJ6r3OyrumO4W34r","img":"icons/tools/instruments/bell-gold.webp","command":"async function brokenLinkChecker() {\n    let links = \"\";\n    for (let journal of game.journal) {\n        for (let page of journal.pages) {\n            if (page.type === \"text\") {\n                const renderedContent = await TextEditor.enrichHTML(page.text.content, {async: true, relativeTo: page});\n                console.log(\"Rendered:\", renderedContent);\n                const brokenLinks = $(renderedContent).find(\"a.content-link.broken\");\n                console.log(brokenLinks);\n                if (brokenLinks[0]) \n                links += TextEditor.enrichHTML(`<p>There are ${brokenLinks.length} broken link(s) in ${page.link}.</p>`);\n            }\n        }\n    }\n    return links;\n}\n\nconst linkList = await brokenLinkChecker();\n\nconst brokenLinkOptions = {\n    width: 600,\n    resizable: true\n};\n\nnew Dialog({\n    title: \"Broken Links List\",\n    content: linkList,\n    buttons: {\n      OK: {\n        label: \"OK\",\n        callback: () => {ui.notifications.info(\"Broken links have all been reviewed!\")},\n        icon: `<i class=\"fas fa-check\"></i>`\n      }\n    },\n    default: \"OK\",\n    close: () => {console.log(\"Broken links have all been reviewed!\")}\n  }, brokenLinkOptions ).render(true);","ownership":{"default":0,"ZJ6r3OyrumO4W34r":3},"flags":{"core":{"sourceId":"Macro.IuwIyoHlVnMNWlqj"},"exportSource":{"world":"dnd5e","system":"dnd5e","coreVersion":"10.277","systemVersion":"2.0.0-alpha2"}},"_stats":{"systemId":"pf2e","systemVersion":"3.13.5","coreVersion":"10.279","createdTime":1661865245914,"modifiedTime":1661865245914,"lastModifiedBy":"ZJ6r3OyrumO4W34r"},"folder":null,"sort":0,"_id":"jy6SnGjN4kupMQeq"}
